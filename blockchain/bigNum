import javax.xml.crypto.Data;
import java.lang.reflect.Array;
import java.math.BigInteger;
import java.util.*;
import java.util.Date;
public class LargeNUMb {
    public static long findKey(BigInteger key, int n){
        long m = System.currentTimeMillis();
        BigInteger temp = new BigInteger(n,new Random(0));
        while (temp.compareTo(key) != 0)
        {
            if(temp.compareTo(key) == -1){
                temp.add(new BigInteger("1"));
            }else {
                temp.subtract(new BigInteger("1"));
            }

        }

        return  (System.currentTimeMillis() - m) ;
    }

    public static void main(String[] args) {
      
        int[] a = {8,16,32,64,128,256,512,1024,2048,4096};
        BigInteger num = new BigInteger("2");
        BigInteger[] rand = new BigInteger[a.length];
        for (int i = 0; i < a.length; i++ ){

            rand[i] = new BigInteger(a[i],new Random(1111));
            System.out.println( num.pow(a[i]));


        }
        System.out.println( findKey(rand[8],a[8]));

    }
    
}
